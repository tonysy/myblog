<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Writing And Thinking]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://syzhang.me/"/>
  <updated>2015-12-10T09:37:28.206Z</updated>
  <id>http://syzhang.me/</id>
  
  <author>
    <name><![CDATA[SY Zhang]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[八皇后问题(递归搜索+回溯)]]></title>
    <link href="http://syzhang.me/2015/12/10/%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98(%E9%80%92%E5%BD%92%E6%90%9C%E7%B4%A2+%E5%9B%9E%E6%BA%AF)/"/>
    <id>http://syzhang.me/2015/12/10/八皇后问题(递归搜索+回溯)/</id>
    <published>2015-12-10T09:35:04.000Z</published>
    <updated>2015-12-10T09:37:28.206Z</updated>
    <content type="html"><![CDATA[<p>##八皇后问题(递归搜索+溯)<br>我们考虑使用<strong>递归搜索</strong>来解决这个问题</p>
<p>对于八皇后问题，不考虑使用美剧算法，枚举的话，状态太多，可能性太多</p>
<p>###搜索问题的典型算法（递归搜索）</p>
<ul>
<li>开始</li>
<li>判断是否达到最简情况<ul>
<li>枚举可能的动作</li>
<li>尝试这个动作</li>
<li>递归计算（搜索）更简单的情况</li>
<li>撤销这个动作（与第二步的动作是同一个动作）</li>
</ul>
</li>
<li>返回返回值</li>
</ul>
<h3 id="问题描述">问题描述</h3><p>8X8放8个皇后，互相不能吃掉对方。</p>
<h3 id="解法分析">解法分析</h3><p>从第一行开始尝试<br>递归的考虑一个函数f(n)<br>解决从n到7排布皇后的问题，返回可能性的数量<br>f(0) = (在0,0放皇后)F(1)+(在0,1放皇后)F(1)+…..+(在0,7放皇后)F(1)<br>f(1) = (在1,2放皇后)f(2)+…+(在1,7放皇后)f(2)<br>f(7) = (在7,7放皇后)1(f(8))</p>
<h3 id="代码实现">代码实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">------------------------------</span><br><span class="line">Platform:VS2013</span><br><span class="line">Time:2015-12-10 16:09:40</span><br><span class="line">Language:C++</span><br><span class="line">Author:S.Y. Zhang</span><br><span class="line">E-mail:Sy.zhangbuaa@gmail.com</span><br><span class="line">------------------------------</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> N <span class="number">9</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">0</span>;<span class="comment">//记录所有可能的情况数</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> board[N + <span class="number">2</span>][N + <span class="number">2</span>];<span class="comment">//初始化10X10棋盘 包含边界</span></span><br><span class="line"><span class="comment">//定义一个结构体 来作为方向</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> _tag_pos</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> j;</span><br><span class="line">&#125;Pos;</span><br><span class="line"><span class="comment">//检查三个方向 左上 右上 正上</span></span><br><span class="line"><span class="keyword">static</span> Pos pos[<span class="number">3</span>] = &#123; &#123;-<span class="number">1</span>,-<span class="number">1</span>&#125;, &#123;-<span class="number">1</span>,<span class="number">1</span>&#125;, &#123;-<span class="number">1</span>,<span class="number">0</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//棋盘初始化函数 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="comment">//将边界初始化为‘#’,内容初始化为‘ ’</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N + <span class="number">2</span>;i++)&#123;</span><br><span class="line">		board[<span class="number">0</span>][i] = <span class="string">'#'</span>;</span><br><span class="line">		board[N + <span class="number">1</span>][i] = <span class="string">'#'</span>;</span><br><span class="line">		board[i][<span class="number">0</span>] = <span class="string">'#'</span>;</span><br><span class="line">		board[i][N + <span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= N; j++)&#123;</span><br><span class="line">			board[j][i] = <span class="string">' '</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//棋盘打印函数 便于测试</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N + <span class="number">2</span>; i++)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N + <span class="number">2</span>; j++)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; board[i][j];</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">bool</span> ret = <span class="literal">true</span>;<span class="comment">//可否放皇后的标志位</span></span><br><span class="line">	<span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++)&#123;<span class="comment">//检查三个方向</span></span><br><span class="line">		<span class="keyword">int</span> ni = i;</span><br><span class="line">		<span class="keyword">int</span> nj = j;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//在边界内进行判断</span></span><br><span class="line">		<span class="keyword">while</span> (ret &amp;&amp; (board[ni][nj] != <span class="string">'#'</span>))&#123;<span class="comment">//判断未达到边界</span></span><br><span class="line">			ni += pos[k].i;</span><br><span class="line">			nj += pos[k].j;</span><br><span class="line"></span><br><span class="line">			ret = ret &amp;&amp; (board[ni][nj] != <span class="string">'*'</span>);<span class="comment">//判断可否放皇后</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//ret = true 该位置没有放皇后，可以放皇后</span></span><br><span class="line">	<span class="comment">//ret = false  该位置放有皇后，不可放皇后</span></span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//算法核心，放置皇后函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> i)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (i &gt; N)&#123;</span><br><span class="line">		num ++;</span><br><span class="line">		display;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; j++)&#123;</span><br><span class="line">			<span class="keyword">if</span> (check(i, j))&#123;</span><br><span class="line">				board[i][j] = <span class="string">'*'</span>;</span><br><span class="line">				find(i + <span class="number">1</span>);</span><br><span class="line">				board[i][j] = <span class="string">' '</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	init();</span><br><span class="line">	</span><br><span class="line">	find(<span class="number">1</span>);</span><br><span class="line">	display();</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>##八皇后问题(递归搜索+溯)<br>我们考虑使用<strong>递归搜索</strong>来解决这个问题</p>
<p>对于八皇后问题，不考虑使用美剧算法，枚举的话，状态太多，可能性太多</p>
<p>###搜索问题的典型算法（递归搜索）</p>
<ul>
<li>开始<]]>
    </summary>
    
      <category term="Algorithms" scheme="http://syzhang.me/tags/Algorithms/"/>
    
      <category term="C++" scheme="http://syzhang.me/tags/C/"/>
    
      <category term="八皇后" scheme="http://syzhang.me/tags/%E5%85%AB%E7%9A%87%E5%90%8E/"/>
    
      <category term="回溯" scheme="http://syzhang.me/tags/%E5%9B%9E%E6%BA%AF/"/>
    
      <category term="递归" scheme="http://syzhang.me/tags/%E9%80%92%E5%BD%92/"/>
    
      <category term="C++" scheme="http://syzhang.me/categories/C/"/>
    
      <category term="Algorithms" scheme="http://syzhang.me/categories/C/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[未能加载项目。缺少根元素。Microsoft.Cpp.Win32.user.props]]></title>
    <link href="http://syzhang.me/2015/12/09/%E6%9C%AA%E8%83%BD%E5%8A%A0%E8%BD%BD%E9%A1%B9%E7%9B%AE%E3%80%82%E7%BC%BA%E5%B0%91%E6%A0%B9%E5%85%83%E7%B4%A0%E3%80%82Microsoft.Cpp.Win32.user.props/"/>
    <id>http://syzhang.me/2015/12/09/未能加载项目。缺少根元素。Microsoft.Cpp.Win32.user.props/</id>
    <published>2015-12-09T12:40:10.000Z</published>
    <updated>2015-12-09T12:49:36.766Z</updated>
    <content type="html"><![CDATA[<p>一不小心可能修改了VS2010的配置文件，导致无法创建新的工程<br>提示错误如下:</p>
<blockquote>
<p>未能加载项目文件。缺少根元素。<br>C:\Users\tony\AppData\Local\Microsoft\MSBuild\v4.0\Microsoft.Cpp.Win32.user.props</p>
</blockquote>
<p>如果你不幸出现如此状况，可按下列办法解决</p>
<ul>
<li>打开上述文件目录</li>
<li>删除上述文件</li>
<li>打开一个文本编辑器，比如Sublime Text</li>
<li><p>将下列代码复制粘贴</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">Project</span> <span class="attribute">DefaultTargets</span>=<span class="value">"Build"</span> <span class="attribute">ToolsVersion</span>=<span class="value">"4.0"</span> <span class="attribute">xmlns</span>=<span class="value">"http://schemas.microsoft.com/developer/msbuild/2003"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">ImportGroup</span> <span class="attribute">Label</span>=<span class="value">"PropertySheets"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">PropertyGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ExecutablePath</span>&gt;</span>$(VCInstallDir)bin;$(WindowsSdkDir)bin\NETFX 4.0 Tools;$(WindowsSdkDir)bin;$(VSInstallDir)Common7\Tools\bin;$(VSInstallDir)Common7\tools;$(VSInstallDir)Common7\ide;$(ProgramFiles)\HTML Help Workshop;$(FrameworkSDKDir)\bin;$(MSBuildToolsPath32);$(VSInstallDir);$(SystemRoot)\SysWow64;$(FxCopDir);$(PATH);<span class="tag">&lt;/<span class="title">ExecutablePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">IncludePath</span>&gt;</span>$(IncludePath)<span class="tag">&lt;/<span class="title">IncludePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ReferencePath</span>&gt;</span>$(VCInstallDir)atlmfc\lib;$(VCInstallDir)lib<span class="tag">&lt;/<span class="title">ReferencePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">LibraryPath</span>&gt;</span>$(LibraryPath)<span class="tag">&lt;/<span class="title">LibraryPath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">SourcePath</span>&gt;</span>$(VCInstallDir)atlmfc\src\mfc;$(VCInstallDir)atlmfc\src\mfcm;$(VCInstallDir)atlmfc\src\atl;$(VCInstallDir)crt\src;<span class="tag">&lt;/<span class="title">SourcePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ExcludePath</span>&gt;</span>$(VCInstallDir)include;$(VCInstallDir)atlmfc\include;$(WindowsSdkDir)include;$(FrameworkSDKDir)\include;$(MSBuildToolsPath32);$(VCInstallDir)atlmfc\lib;$(VCInstallDir)lib;<span class="tag">&lt;/<span class="title">ExcludePath</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">PropertyGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">Project</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>将此文件保存为 <code>Microsoft.Cpp.Win32.user.props</code> 复制到上述文件夹</p>
</li>
<li>再次尝试创建新的工程，即恢复正常</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>一不小心可能修改了VS2010的配置文件，导致无法创建新的工程<br>提示错误如下:</p>
<blockquote>
<p>未能加载项目文件。缺少根元素。<br>C:\Users\tony\AppData\Local\Microsoft\MSBuild\v4.0\Micr]]>
    </summary>
    
      <category term="Bug" scheme="http://syzhang.me/tags/Bug/"/>
    
      <category term="C++" scheme="http://syzhang.me/tags/C/"/>
    
      <category term="环境配置" scheme="http://syzhang.me/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
      <category term="C++" scheme="http://syzhang.me/categories/C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Coursera-PKU 计算机导论与C语言基础 第八周综合练习(2)]]></title>
    <link href="http://syzhang.me/2015/12/09/Coursera-PKU%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AF%BC%E8%AE%BA%E4%B8%8EC%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%20%E7%AC%AC%E5%85%AB%E5%91%A8%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0(2)/"/>
    <id>http://syzhang.me/2015/12/09/Coursera-PKU 计算机导论与C语言基础 第八周综合练习(2)/</id>
    <published>2015-12-09T12:22:12.000Z</published>
    <updated>2015-12-09T12:35:36.340Z</updated>
    <content type="html"><![CDATA[<h2 id="编程题＃1：数字求和">编程题＃1：数字求和</h2><h3 id="来源:">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述">描述</h3><p>给定一个正整数a，以及另外的5个正整数，问题是：这5个整数中，小于a的整数的和是多少？</p>
<h3 id="输入">输入</h3><p>输入一行，只包括6个小于100的正整数，其中第一个正整数就是a。</p>
<h3 id="输出">输出</h3><p>输出一行，给出一个正整数，是5个数中小于a的数的和。</p>
<h3 id="样例输入">样例输入</h3><blockquote>
<p>10 1 2 3 4 11</p>
</blockquote>
<h3 id="样例输出">样例输出</h3><blockquote>
<p>10</p>
</blockquote>
<h2 id="编程题＃1:_解答">编程题＃1: 解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">------------------------------</span><br><span class="line">Platform:VS2013</span><br><span class="line">Time:2015-12-8 21:23:54</span><br><span class="line">Language:C++</span><br><span class="line">Author:S.Y. Zhang</span><br><span class="line">E-mail:Sy.zhangbuaa@gmail.com</span><br><span class="line">------------------------------</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> num[<span class="number">6</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (num[i] &lt; num[<span class="number">0</span>])</span><br><span class="line">			sum += num[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//while (1);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编程题＃2：骑车与走路">编程题＃2：骑车与走路</h2><h3 id="来源:-1">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB-1">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述-1">描述</h3><p>在北大校园里,没有自行车,上课办事会很不方便.但实际上,并非去办任何事情都是骑车快,因为骑车总要找车、开锁、停车、锁车等,这要耽误一些时间.假设找到自行车,开锁并车上自行车的时间为27秒;停车锁车的时间为23秒;步行每秒行走1.2米,骑车每秒行走3.0米.请判断走不同的距离去办事,是骑车快还是走路快.</p>
<h3 id="输入-1">输入</h3><p>第一行为待处理的数据的数量n</p>
<p>其后每一行整数为一次办事要行走的距离,单位为米.</p>
<h3 id="输出-1">输出</h3><p>对应每个整数,如果骑车快,输出一行”Bike”;如果走路快,输出一行”Walk”;如果一样快,输出一行”All”.</p>
<h3 id="样例输入-1">样例输入</h3><blockquote>
<p>4<br>50<br>90<br>120<br>180</p>
</blockquote>
<h3 id="样例输出-1">样例输出</h3><blockquote>
<p>Walk<br>Walk<br>Bike<br>Bike</p>
<h3 id="提示">提示</h3><p>注意数据类型，应当使用浮点数来保存结果</p>
</blockquote>
<h2 id="编程题＃2:_解答">编程题＃2: 解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">------------------------------</span><br><span class="line">Platform:VS2013</span><br><span class="line">Time:2015-12-8 21:29:36</span><br><span class="line">Language:C++</span><br><span class="line">Author:S.Y. Zhang</span><br><span class="line">E-mail:Sy.zhangbuaa@gmail.com</span><br><span class="line">------------------------------</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> TIME_LOCK <span class="number">27</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> TIME_STOP <span class="number">23</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="comment">//input</span></span><br><span class="line">	<span class="keyword">int</span> *p;</span><br><span class="line">	<span class="keyword">int</span> size;</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">float</span> v_walk = <span class="number">1.2</span>;</span><br><span class="line">	<span class="keyword">float</span> v_bike = <span class="number">3.0</span>;</span><br><span class="line">	<span class="keyword">float</span> time_walk = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">float</span> time_bike = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; size;</span><br><span class="line">	p = <span class="keyword">new</span> <span class="keyword">int</span>[size];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; p[i];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)&#123;</span><br><span class="line">		time_walk = <span class="keyword">float</span>(p[i]) / v_walk;</span><br><span class="line">		time_bike = <span class="keyword">float</span>(p[i]) / v_bike + TIME_LOCK + TIME_STOP;</span><br><span class="line">		<span class="keyword">if</span> (time_walk &gt; time_bike)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"Bike"</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (time_walk == time_bike)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"All"</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"Walk"</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> p;</span><br><span class="line">	<span class="comment">//while (1);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编程题＃3：买房子">编程题＃3：买房子</h2><h3 id="来源:-2">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB-2">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述-2">描述</h3><p>某程序员开始工作，年薪N万，他希望在中关村公馆买一套60平米的房子，现在价格是200万，假设房子价格以每年百分之K增长，并且该程序员未来年薪不变，且不吃不喝，不用交税，每年所得N万全都积攒起来，问第几年能够买下这套房子（第一年房价200万，收入N万）。程序员每年先拿工资，再尝试买房，然后房子才涨价。</p>
<h3 id="输入-2">输入</h3><p>有多行，每行两个整数N（10 &lt;= N &lt;= 50）, K（1 &lt;= K &lt;= 20）</p>
<h3 id="输出-2">输出</h3><p>针对每组数据，如果在第20年或者之前就能买下这套房子，则输出一个整数M，表示最早需要在第M年能买下，否则输出Impossible，输出需要换行</p>
<h3 id="样例输入-2">样例输入</h3><blockquote>
<p>50 10<br>40 10<br>40 8</p>
</blockquote>
<h3 id="样例输出-2">样例输出</h3><blockquote>
<p>8<br>Impossible<br>10</p>
</blockquote>
<h3 id="提示-1">提示</h3><p>注意数据类型，应当使用浮点数来保存结果</p>
<p>C++里多行输入（在不知道一共有多少行的情况下）可以使用下面的语句，每输入一组数据就可以输出其结果，不用等待所有数据都输入完毕。</p>
<blockquote>
<p>while(cin&gt;&gt;N&gt;&gt;K){<br>   //do your magic<br>}</p>
</blockquote>
<h2 id="编程题＃3:_解答">编程题＃3: 解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">------------------------------</span><br><span class="line">Platform:VS2013</span><br><span class="line">Time:2015-12-8 21:46:40</span><br><span class="line">Language:C++</span><br><span class="line">Author:S.Y. Zhang</span><br><span class="line">E-mail:Sy.zhangbuaa@gmail.com</span><br><span class="line">------------------------------</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">float</span> N = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">float</span> K = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> M = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">float</span> price = <span class="number">200</span>;</span><br><span class="line">	<span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K)&#123;</span><br><span class="line">		price = <span class="number">200</span>;</span><br><span class="line">		flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (M = <span class="number">1</span>; M &lt;= <span class="number">20</span>; M++)&#123;</span><br><span class="line">			<span class="keyword">if</span> (M*N &gt;= price)&#123;</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt; M &lt;&lt; endl;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			price += price*(K / <span class="number">100.0</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"Impossible"</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//while (1);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总结">总结</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;N&gt;&gt;K)&#123;</span><br><span class="line">    <span class="comment">//do your magic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意这个用法，一直在处于等待输入状态</p>
<h2 id="编程题＃4：找和为K的两个元素">编程题＃4：找和为K的两个元素</h2><h3 id="来源:-3">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB-3">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述-3">描述</h3><p>在一个长度为n(n &lt; 1000)的整数序列中，判断是否存在某两个元素之和为k。</p>
<h3 id="输入-3">输入</h3><p>第一行输入序列的长度n和k，用空格分开。</p>
<p>第二行输入序列中的n个整数，用空格分开。</p>
<h3 id="输出-3">输出</h3><p>如果存在某两个元素的和为k，则输出yes，否则输出no。</p>
<h3 id="样例输入-3">样例输入</h3><blockquote>
<p>9 10<br>1 2 3 4 5 6 7 8 9</p>
<h3 id="样例输出-3">样例输出</h3><p>yes</p>
</blockquote>
<h2 id="编程题＃4:_解答">编程题＃4: 解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">------------------------------</span><br><span class="line">Platform:VS2013</span><br><span class="line">Time:2015-12-8 22:36:05</span><br><span class="line">Language:C++</span><br><span class="line">Author:S.Y. Zhang</span><br><span class="line">E-mail:Sy.zhangbuaa@gmail.com</span><br><span class="line">------------------------------</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> size;<span class="comment">//y</span></span><br><span class="line">	<span class="keyword">int</span> sum;<span class="comment">//k</span></span><br><span class="line">	<span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; size &gt;&gt; sum;</span><br><span class="line">	<span class="keyword">int</span> *p;</span><br><span class="line">	p = <span class="keyword">new</span> <span class="keyword">int</span>[size];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; p[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size - <span class="number">1</span>; i++)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; size; j++)&#123;</span><br><span class="line">			<span class="keyword">if</span> (sum - p[i] == p[j])&#123;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"yes"</span> &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"no"</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> p;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//while (1);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编程题＃5：自整除数">编程题＃5：自整除数</h2><h3 id="来源:-4">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB-4">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述-4">描述</h3><p>对一个整数n,如果其各个位数的数字相加得到的数m能整除n,则称n为自整除数.例如21,21%(2+1)==0,所以21是自整除数.现求出从10到n(n &lt; 100)之间的所有自整除数.</p>
<h3 id="输入-4">输入</h3><p>有一行,整数n,(10 &lt;= n &lt; 100)</p>
<h3 id="输出-4">输出</h3><p>有多行.按从小到大的顺序输出所有大于等于10,小于等于n的自整除数,每行一个自整除数.</p>
<h3 id="样例输入-4">样例输入</h3><blockquote>
<p>47</p>
</blockquote>
<h3 id="样例输出-4">样例输出</h3><blockquote>
<p>10<br>12<br>18<br>20<br>21<br>24<br>27<br>30<br>36<br>40<br>42<br>45</p>
</blockquote>
<h2 id="编程题＃:_解答">编程题＃: 解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">------------------------------</span><br><span class="line">Platform:VS2013</span><br><span class="line">Time:2015-12-8 22:48:57</span><br><span class="line">Language:C++</span><br><span class="line">Author:S.Y. Zhang</span><br><span class="line">E-mail:Sy.zhangbuaa@gmail.com</span><br><span class="line">------------------------------</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="keyword">int</span> max;</span><br><span class="line">	<span class="keyword">int</span> min;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		min = i % <span class="number">10</span>;</span><br><span class="line">		max = i / <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">if</span> (i % (min + max) == <span class="number">0</span>)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//while (1);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="编程题＃1：数字求和">编程题＃1：数字求和</h2><h3 id="来源:">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制]]>
    </summary>
    
      <category term="C++" scheme="http://syzhang.me/tags/C/"/>
    
      <category term="Coursera" scheme="http://syzhang.me/tags/Coursera/"/>
    
      <category term="C++" scheme="http://syzhang.me/categories/C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Coursera-PKU C程序设计进阶 第九周期末考试]]></title>
    <link href="http://syzhang.me/2015/12/09/Coursera-PKU%20C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%BF%9B%E9%98%B6%20%E7%AC%AC%E4%B9%9D%E5%91%A8%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95/"/>
    <id>http://syzhang.me/2015/12/09/Coursera-PKU C程序设计进阶 第九周期末考试/</id>
    <published>2015-12-09T11:55:26.000Z</published>
    <updated>2015-12-09T12:35:44.352Z</updated>
    <content type="html"><![CDATA[<h2 id="编程题＃1：含k个3的数">编程题＃1：含k个3的数</h2><h3 id="来源:">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述">描述</h3><p>输入二个正整数m 和 k，其中1 &lt; m &lt; 100000，1 &lt; k &lt;5 ，判断m 能否被19整除，且恰好含有k个3，如果满足条件，则输出YES，否则，输出NO。<br>例如，输入：</p>
<p>43833 3</p>
<p>满足条件，输出YES</p>
<p>如果输入</p>
<p>39331 3</p>
<p>尽管有3个3，但不能被19整除，也不满足条件，应输出NO</p>
<h3 id="输入">输入</h3><p>m 和 k 的值，空格间隔</p>
<h3 id="输出">输出</h3><p>满足条件时输出 YES，不满足时输出 NO</p>
<h3 id="样例输入">样例输入</h3><blockquote>
<p>43833 3</p>
<h3 id="样例输出">样例输出</h3><p>YES</p>
</blockquote>
<h2 id="编程题＃1:_解答">编程题＃1: 解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">------------------------------</span><br><span class="line">Platform:VS2013</span><br><span class="line">Time:2015-12-9 13:17:44</span><br><span class="line">Language:C++</span><br><span class="line">Author:S.Y. Zhang</span><br><span class="line">E-mail:Sy.zhangbuaa@gmail.com</span><br><span class="line">------------------------------</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">	<span class="keyword">int</span> num_3 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; m &gt;&gt; k;</span><br><span class="line">	temp = m;</span><br><span class="line">	<span class="keyword">while</span>(temp!=<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(temp % <span class="number">10</span> == <span class="number">3</span>)</span><br><span class="line">			num_3 ++;</span><br><span class="line">		temp = temp / <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(num_3 == k &amp;&amp; m % <span class="number">19</span> == <span class="number">0</span>)</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span> &lt;&lt; endl;</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//while (1);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编程题＃2：字符串中次数第2多的字母">编程题＃2：字符串中次数第2多的字母</h2><h3 id="来源:-1">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB-1">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述-1">描述</h3><p>输入一串长度不超过500个符号的字符串，输出在串中出现第2多的英语字母(大小写字母认为相同)和次数（如果串中有其它符号，则忽略不考虑）。如果有多个字母的次数都是第2多，则按串中字母出现的顺序输出第1个。</p>
<p>例 ab&amp;dcAab&amp;c9defgb</p>
<p>这里，a 和 b都出现3次，c和d都出现2次，e、f 和 g 各出现1次，其中的符号&amp;和9均忽略不考虑。因此，出现第2多的应该是 c 和 d，但是 d 开始出现的位置在 c 的前面，因此，输出为</p>
<p>D+d:2</p>
<p>(假定在字符串中，次数第2多的字母总存在)</p>
<h3 id="输入-1">输入</h3><p>一个字符串</p>
<h3 id="输出-1">输出</h3><p>大写字母+小写字母:个数</p>
<h3 id="样例输入-1">样例输入</h3><blockquote>
<p>ab&amp;dcAab&amp;c9defgb</p>
</blockquote>
<h3 id="样例输出-1">样例输出</h3><blockquote>
<p>D+d:2</p>
</blockquote>
<h2 id="编程题＃2:_解答">编程题＃2: 解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">------------------------------</span><br><span class="line">Platform:VS2013</span><br><span class="line">Time:2015-12-9 13:30:54</span><br><span class="line">Language:C++</span><br><span class="line">Author:S.Y. Zhang</span><br><span class="line">E-mail:Sy.zhangbuaa@gmail.com</span><br><span class="line">------------------------------</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> charandnum &#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> charandnum s[<span class="number">501</span>], max, second;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">501</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="keyword">int</span> i, j, l = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; a[i] != <span class="string">'\0'</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((a[i] &gt;= <span class="string">'A'</span> &amp;&amp; a[i] &lt;= <span class="string">'Z'</span>) || (a[i] &gt;= <span class="string">'a'</span> &amp;&amp; a[i] &lt;= <span class="string">'z'</span>)) &#123;</span><br><span class="line">            <span class="keyword">char</span> temp;</span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt;= <span class="string">'a'</span>)</span><br><span class="line">                temp = a[i] - <span class="number">32</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                temp = a[i];</span><br><span class="line">            <span class="keyword">bool</span> found = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j&lt; l; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s[j].ch == temp) &#123;</span><br><span class="line">                    s[j].count++;</span><br><span class="line">                    found = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!found) &#123;</span><br><span class="line">                s[l].ch = temp;</span><br><span class="line">                s[l].count = <span class="number">1</span>;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    max = s[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">bool</span> foundSecond = <span class="literal">false</span>;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!foundSecond) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i].count &gt; max.count) &#123;</span><br><span class="line">            second = max;</span><br><span class="line">            max = s[i];</span><br><span class="line">            foundSecond = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s[i].count &lt; max.count) &#123;</span><br><span class="line">            second = s[i];</span><br><span class="line">            foundSecond = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i; i&lt;l - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i].count &gt; max.count) &#123;</span><br><span class="line">            second = max;</span><br><span class="line">            max = s[i];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s[i].count &lt; max.count &amp;&amp; s[i].count &gt; second.count) &#123;</span><br><span class="line">            second = s[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c+%c:%d\n"</span>, second.ch, (<span class="keyword">char</span>)(second.ch + <span class="number">32</span>), second.count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">	bool flag_found = false; </span><br><span class="line">	int l = 0;</span><br><span class="line">	char temp;</span><br><span class="line">	struct Character&#123;</span><br><span class="line">		char ch;</span><br><span class="line">		int num;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	Character input[501] = &#123;NULL&#125;;</span><br><span class="line">	Character temp_second = &#123;NULL&#125;;</span><br><span class="line">	Character temp_max = &#123;NULL&#125;;</span><br><span class="line"></span><br><span class="line">	char data[501];</span><br><span class="line">	cin.getline(data,500,'\n');</span><br><span class="line"></span><br><span class="line">	for(int i = 0; i &lt; 500; i++)&#123;</span><br><span class="line">		flag_found = false;</span><br><span class="line">		if((data[i] &gt;= 'A' &amp;&amp; data[i] &lt;='Z')||(data[i] &gt;= 'a' &amp;&amp; data[i] &lt;='z'))&#123;</span><br><span class="line">			if (data[i]&gt;= 'a')</span><br><span class="line">				temp = data[i] - 32;</span><br><span class="line">			else</span><br><span class="line">				temp = data[i];</span><br><span class="line"></span><br><span class="line">			for(int j= 0; j&lt; l;j++)&#123;</span><br><span class="line">				if(input[j].ch == temp)&#123;</span><br><span class="line">					input[j].num ++;</span><br><span class="line">					flag_found = true;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			if(!flag_found)&#123;</span><br><span class="line">				input[l].ch = temp;</span><br><span class="line">				input[l].num = 1;</span><br><span class="line">				l ++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	temp_max = input[0];</span><br><span class="line">	int j = 0;</span><br><span class="line">	bool flag_second = false;</span><br><span class="line">	while(!flag_second)&#123;</span><br><span class="line">		if(input[j].num &gt; temp_max.num)&#123;</span><br><span class="line">			temp_second = temp_max;</span><br><span class="line">			temp_max = input[j];</span><br><span class="line">			flag_second = true;</span><br><span class="line">		&#125;</span><br><span class="line">		else if (input[j].num &lt; temp_max.num)&#123;</span><br><span class="line">			temp_second =input[j];</span><br><span class="line">			flag_second = true;</span><br><span class="line">		&#125;</span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	for(j; j &lt;= l-1; j++)&#123;</span><br><span class="line">		if(input[j].num &gt; temp_max.num)&#123;</span><br><span class="line">			temp_second = temp_max;</span><br><span class="line">			temp_max = input[j];</span><br><span class="line">		&#125;</span><br><span class="line">		else if(input[j].num &lt; temp_max.num &amp;&amp; input[j].num &gt; temp_second.num)</span><br><span class="line">			temp_second = input[j];</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	cout&lt;&lt;temp_second.ch&lt;&lt;"+"&lt;&lt;char(temp_second.ch+32)&lt;&lt;":"&lt;&lt;temp_second.num&lt;&lt;endl;</span><br><span class="line">	//while(1);</span><br><span class="line">	return 0;	</span><br><span class="line">&#125;</span><br><span class="line">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="总结">总结</h3><p>用结构体存储字符和对应出现的次数<br>在取第二大的过程中，先取最大的，然后再将数据与最大的比较，选出第二大的，即比较两次最大的。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="编程题＃1：含k个3的数">编程题＃1：含k个3的数</h2><h3 id="来源:">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_]]>
    </summary>
    
      <category term="C++" scheme="http://syzhang.me/tags/C/"/>
    
      <category term="Coursera" scheme="http://syzhang.me/tags/Coursera/"/>
    
      <category term="C++" scheme="http://syzhang.me/categories/C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Coursera-PKU 计算机导论与C语言基础 第七周综合练习(1)]]></title>
    <link href="http://syzhang.me/2015/10/24/Coursera-PKU%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AF%BC%E8%AE%BA%E4%B8%8EC%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%20%E7%AC%AC%E4%B8%83%E5%91%A8%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0(1)/"/>
    <id>http://syzhang.me/2015/10/24/Coursera-PKU 计算机导论与C语言基础 第七周综合练习(1)/</id>
    <published>2015-10-24T15:06:41.000Z</published>
    <updated>2015-12-09T12:21:04.063Z</updated>
    <content type="html"><![CDATA[<h2 id="编程题＃1：年龄与疾病">编程题＃1：年龄与疾病</h2><h3 id="来源:">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述">描述</h3><p>某医院想统计一下某项疾病的获得与否与年龄是否有关，需要对以前的诊断记录进行整理。</p>
<h3 id="输入">输入</h3><p>共2行，第一行为过往病人的数目n（0 &lt; n &lt;= 100)，第二行为每个病人患病时的年龄。</p>
<h3 id="输出">输出</h3><p>每个年龄段（分四段：18以下，19-35，36-60，大于60注意看样例输出的格式）的患病人数占总患病人数的比例，以百分比的形式输出，精确到小数点后两位（double）。关于c++的格式化的输入输出，请参考：<a href="http://www.cplusplus.com/reference/iomanip" target="_blank" rel="external">http://www.cplusplus.com/reference/iomanip</a>。也可以在网上搜索一下，资料很多的。</p>
<h3 id="样例输入">样例输入</h3><blockquote>
<p>10<br>1 11 21 31 41 51 61 71 81 91</p>
<h3 id="样例输出">样例输出</h3><p>1-18: 20.00%<br>19-35: 20.00%<br>36-60: 20.00%<br>60-: 40.00%</p>
<h3 id="提示">提示</h3></blockquote>
<p>注意最后一行的输出是“60-: ”，而不是“61-: ”。</p>
<p>每个冒号之后有一个空格。</p>
<p>输出可以用 <code>cout&lt;&lt;fixed&lt;&lt;setprecision(2) &lt;&lt; f;</code> 来保留f后面的两位小数。</p>
<h2 id="编程题＃1:_解答">编程题＃1: 解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i, n, age[<span class="number">100</span>];</span><br><span class="line">	<span class="keyword">int</span> group1 = <span class="number">0</span>, group2 = <span class="number">0</span>, group3 = <span class="number">0</span>, group4 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">float</span> per_1, per_2, per_3, per_4;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; age[i];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (age[i] &lt;= <span class="number">18</span>)</span><br><span class="line">			group1 += <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (age[i] &lt;= <span class="number">35</span>)</span><br><span class="line">			group2 += <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (age[i] &lt;= <span class="number">60</span>)</span><br><span class="line">			group3 += <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			group4 += <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	per_1 = (<span class="keyword">float</span>)group1 / (<span class="keyword">float</span>)n * <span class="number">100</span>;</span><br><span class="line">	per_2 = (<span class="keyword">float</span>)group2 / (<span class="keyword">float</span>)n * <span class="number">100</span>;</span><br><span class="line">	per_3 = (<span class="keyword">float</span>)group3 / (<span class="keyword">float</span>)n * <span class="number">100</span>;</span><br><span class="line">	per_4 = (<span class="keyword">float</span>)group4 / (<span class="keyword">float</span>)n * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"1-18: "</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; per_1 &lt;&lt; <span class="string">"%"</span> &lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"19-35: "</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; per_2 &lt;&lt; <span class="string">"%"</span> &lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"36-60: "</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; per_3 &lt;&lt; <span class="string">"%"</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"60-: "</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; per_4 &lt;&lt; <span class="string">"%"</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">	 </span><br><span class="line">	<span class="comment">//system("pause");</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编程题＃2：成绩判断">编程题＃2：成绩判断</h2><h3 id="来源:-1">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_6000kB">注意： 总时间限制: 1000ms 内存限制: 6000kB</h3><h3 id="描述-1">描述</h3><p>输入一个0–100的分数，判断分数代表什么等级。</p>
<p>95&lt;=分数&lt;=100, 输出1</p>
<p>90&lt;=分数&lt;95,输出2</p>
<p>85&lt;=分数&lt;90,输出3</p>
<p>80&lt;=分数&lt;85,输出4</p>
<p>70&lt;=分数&lt;80,输出5</p>
<p>60&lt;=分数&lt;70输出6</p>
<p>分数 &lt; 60;输出7.</p>
<h3 id="输入-1">输入</h3><blockquote>
<p>n</p>
</blockquote>
<h3 id="输出-1">输出</h3><blockquote>
<p>m</p>
</blockquote>
<h3 id="样例输入-1">样例输入</h3><blockquote>
<p>87</p>
<h3 id="样例输出-1">样例输出</h3><p>3</p>
</blockquote>
<h2 id="编程题＃2：解答">编程题＃2：解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> score = <span class="number">0</span>, grade = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (score &lt;= <span class="number">100</span> &amp;&amp; score &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (score &lt; <span class="number">60</span>)</span><br><span class="line">			grade = <span class="number">7</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">70</span>)</span><br><span class="line">			grade = <span class="number">6</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">80</span>)</span><br><span class="line">			grade = <span class="number">5</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">85</span>)</span><br><span class="line">			grade = <span class="number">4</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">90</span>)</span><br><span class="line">			grade = <span class="number">3</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">95</span>)</span><br><span class="line">			grade = <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			grade = <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; grade &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编程题＃3：找出第k大的数">编程题＃3：找出第k大的数</h2><h3 id="来源:-2">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB-1">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述-2">描述</h3><p>用户输入N和K，然后接着输入N个正整数（无序的），程序在不对N个整数排序的情况下，找出第K大的数。注意，第K大的数意味着从大到小排在第K位的数。</p>
<h3 id="输入-2">输入</h3><blockquote>
<p>N</p>
<p>K</p>
<p>a1 a2 a3 a4 ….. aN</p>
</blockquote>
<h3 id="输出-2">输出</h3><blockquote>
<p>b</p>
</blockquote>
<h3 id="样例输入-2">样例输入</h3><blockquote>
<p>5<br>2<br>32 3 12 5 89</p>
<h3 id="样例输出-2">样例输出</h3><p>32</p>
<h3 id="提示-1">提示</h3></blockquote>
<p>这是一道很经典的算法问题，是公司面试的常见考题。以后学习递归之后再回头看看这道题，或许有新解法。</p>
<h2 id="编程题＃3：解答">编程题＃3：解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n = <span class="number">0</span>, k;<span class="comment">//n为数据的个数，求第k大的数</span></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	<span class="keyword">int</span> *a;</span><br><span class="line">	a = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++)<span class="comment">//录入数据</span></span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">	<span class="comment">//遍历整个数组</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> num = <span class="number">0</span>;<span class="comment">//记录有几个数比所选的这个数大</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i]&lt;a[j])</span><br><span class="line">				num++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (num == k - <span class="number">1</span>)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//system("pause");</span></span><br><span class="line">	<span class="built_in">free</span>(a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编程题＃4：人民币支付">编程题＃4：人民币支付</h2><h3 id="来源:-3">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存限制:_65536kB-2">注意： 总时间限制: 1000ms 内存限制: 65536kB</h3><h3 id="描述-3">描述</h3><p>从键盘输入一指定金额（以元为单位，如345），然后输出支付该金额的各种面额的人民币数量，显示100元，50元，20元，10元，5元，1元各多少张，要求尽量使用大面额的钞票。</p>
<h3 id="输入-3">输入</h3><p>一个小于1000的正整数。</p>
<h3 id="输出-3">输出</h3><p>输出分行，每行显示一个整数，从上到下分别表示100元，50元，20元，10元，5元，1元人民币的张数</p>
<h3 id="样例输入-3">样例输入</h3><blockquote>
<p>735</p>
<h3 id="样例输出-3">样例输出</h3><p>7<br>0<br>1<br>1<br>1<br>0</p>
</blockquote>
<h2 id="编程题＃4：解答">编程题＃4：解答</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> money = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cash_100 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cash_50 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cash_20 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cash_10 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cash_5 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cash_1 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> money_temp = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; money;</span><br><span class="line">	<span class="keyword">while</span> (money &lt;= <span class="number">1000</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cash_100 = money / <span class="number">100</span>;</span><br><span class="line">		money_temp = money % <span class="number">100</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; cash_100 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">		cash_50 = money_temp / <span class="number">50</span>;</span><br><span class="line">		money_temp = money_temp % <span class="number">50</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; cash_50 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">		cash_20 = money_temp / <span class="number">20</span>;</span><br><span class="line">		money_temp = money_temp % <span class="number">20</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; cash_20 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">		cash_10 = money_temp / <span class="number">10</span>;</span><br><span class="line">		money_temp = money_temp % <span class="number">10</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; cash_10 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">		cash_5 = money_temp / <span class="number">5</span>;</span><br><span class="line">		money_temp = money_temp % <span class="number">5</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; cash_5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">		cash_1 = money_temp / <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; cash_1 &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="编程题＃1：年龄与疾病">编程题＃1：年龄与疾病</h2><h3 id="来源:">来源:</h3><p>POJ (Coursera声明：在POJ上完成的习题将不会计入Coursera的最后成绩。)</p>
<h3 id="注意：_总时间限制:_1000ms_内存]]>
    </summary>
    
      <category term="C++" scheme="http://syzhang.me/tags/C/"/>
    
      <category term="Coursera" scheme="http://syzhang.me/tags/Coursera/"/>
    
      <category term="C++" scheme="http://syzhang.me/categories/C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Tcl语言教程]]></title>
    <link href="http://syzhang.me/2015/10/14/Tcl%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B/"/>
    <id>http://syzhang.me/2015/10/14/Tcl语言教程/</id>
    <published>2015-10-14T12:25:46.000Z</published>
    <updated>2015-10-14T13:03:40.634Z</updated>
    <content type="html"><![CDATA[<p>参考自:<a href="http://www.cnblogs.com/qianlifeng/archive/2011/03/05/1971663.html" target="_blank" rel="external">http://www.cnblogs.com/qianlifeng/archive/2011/03/05/1971663.html</a></p>
<h2 id="语言简介">语言简介</h2><p>Tcl是一种很通用的脚本语言，它几乎在所有的平台上都可以解释运行，功能强大。是tool command language的缩写，发音为 “tickle”。 实际上包含了两个部分：一个语言和一个库。 首先，Tcl是一种简单的脚本语言，主要使用于发布命令给一 些互交程序如文本编辑器、调试器和shell。它有一个简单的语法 和很强可扩充性，Tcl可以创建新的过程以增强其内建命令的能力。其次，Tcl是一个库包，可以被嵌入应用程序，Tcl的库包含了一个分析器、用于执行内建命令的例程和可以使你扩充（定义新的 过程）的库函数。应用程序可以产生Tcl命令并执行，命令可以由用户产生，也可以从用户接口的一个输入中读取（按钮或菜单等）。 但Tcl库收到命令后将它分解并执行内建的命令，经常会产生递归的调用。</p>
<h2 id="基本语法">基本语法</h2><h3 id="1-命令结构：">1.命令结构：</h3><p>commandName arguments。每条命令之间通过换行或者；隔开。例如：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> foo <span class="number">0</span></span><br><span class="line"><span class="built_in">set</span> bar <span class="number">1</span>;</span><br></pre></td></tr></table></figure></p>
<h3 id="2-注释：">2.注释：</h3><p>使用#注释，不过要注意的是下面的注释是错误的：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> foo <span class="number">0</span> <span class="preprocessor">#这个是注释</span></span><br></pre></td></tr></table></figure>
<p>因为tcl解析器总是认为一条命令应该以换行或者分号结束，其他的在同一行中都认为是参数。所以正确的应该是:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> foo <span class="number">0</span>; <span class="preprocessor">#这个是注释</span></span><br></pre></td></tr></table></figure></p>
<p>其实对于习惯于.net编程的人来说每行末尾加个;应该是理所当然的事情，所以这个对我们应该没有什么不习惯的。</p>
<h3 id="3-数据类型：">3.数据类型：</h3><p>tcl不支持.net中的形如<code>int</code> , <code>double</code> ,<code>char</code>等等类型，唯一支持的就是<code>string</code>类型。也就是说一个变量可以在不同的时刻理解为不同的类型。</p>
<h3 id="4-变量">4.变量</h3><p>tcl可以定义两种类型的变量：变量和数组。<br>变量：在tcl变量不需要声明就可以直接赋值。给变量赋值的例子：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> ba <span class="number">1</span>;</span><br><span class="line"><span class="built_in">set</span> ma “qian li feng”;<span class="preprocessor">#加引号的作用是为了告诉编译器包括空格</span></span><br></pre></td></tr></table></figure>
<p> 取得变量的值可以在对应的变量名前面加<code>$</code>来取得，例如：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">puts</span> <span class="variable">$ba</span>;  <span class="comment">#表示打印出ba的值</span></span><br></pre></td></tr></table></figure></p>
<p>数组：数组也不需要声明，直接赋值，例如：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">set</span> <span class="title">qian</span><span class="params">(<span class="number">0</span>)</span> 1</span>;</span><br><span class="line"><span class="function"><span class="built_in">set</span> <span class="title">qian</span><span class="params">(<span class="number">1</span>)</span> 2</span>;</span><br></pre></td></tr></table></figure></p>
<p>一个比较有意思的地方是数组下标可以不按照顺序来写，也不一定是数字，可以是字符串。例如：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">set</span> <span class="title">qian</span><span class="params">(<span class="number">123</span>)</span> f</span>;</span><br><span class="line"><span class="function"><span class="built_in">set</span> <span class="title">qian</span><span class="params">(<span class="number">6789</span>)</span> fs</span>;</span><br><span class="line"><span class="function"><span class="built_in">set</span> <span class="title">qian</span><span class="params">(good)</span> yes</span>;</span><br></pre></td></tr></table></figure></p>
<p>我们可以使用<code>puts $qian(123);</code>的形式来获得数组的内容。当然tcl数组也支持多维数组，声明形式为：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">set</span> <span class="title">qian</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span> fs</span>; <span class="preprocessor">#随便多少维</span></span><br></pre></td></tr></table></figure></p>
<p>如果我们要查看某个已经赋值的数组的信息，可以使用<code>parray</code>命令：如：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">parray</span> qian;   <span class="comment">#将打印出qian数组的所有信息</span></span><br></pre></td></tr></table></figure></p>
<h3 id="5-字符串操作">5.字符串操作</h3><p><code>string</code> 命令基本语法如下（这里的<code>string1</code>，<code>string2</code>可以是字符串也可以是变量，<code>option</code>是下列选项之一）<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string </span>option <span class="keyword">string1 </span><span class="keyword">string2;</span></span><br></pre></td></tr></table></figure></p>
<p><code>option</code>的操作选项：<br>　　<code>compare</code> 按照字典的排序方式进行比较。根据<code>string1 &lt;,=,&gt;string2</code>分别返回<code>-1,0,1</code><br>　　<code>first</code> 返回<code>string2</code>中第一次出现<code>string1</code>的位置，如果没有出现<code>string1</code>则返回<code>-1</code><br>　　<code>last</code>和<code>first</code>相反<br>　　<code>trim</code> 从<code>string1</code>中删除开头和结尾的出现在<code>string2</code>中的字符<br>　　<code>tolower</code> 返回<code>string1</code>中的所有字符被转换为小写字符后的新字符串<br>　　<code>toupper</code> 返回<code>string1</code>中的所有字符串转换为大写后的字符串<br>　　<code>length</code> 返回<code>string1</code>的长度<br>例子：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">string</span> <span class="property">length</span> $qian;  <span class="comment">#将返回变量qian的长度</span></span><br></pre></td></tr></table></figure></p>
<h3 id="6-数字操作">6.数字操作</h3><p>因为tcl中只有一个<code>string</code>类型的变量，所以当要操作数字进行运算的时候，tcl提供了<code>incr</code>和<code>expr</code>两个操作数。</p>
<p><code>incr</code>的基本用法为：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">incr <span class="keyword">variable</span> <span class="keyword">integer</span></span><br></pre></td></tr></table></figure></p>
<p>（variable必须为数字）<br>例如我要将一个数字加3<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> a <span class="number">3</span>;</span><br><span class="line">incr a <span class="number">3</span>; <span class="preprocessor">#将a加<span class="number">3</span>，如果要减<span class="number">3</span>，则为 incr a –<span class="number">3</span>;</span></span><br></pre></td></tr></table></figure></p>
<p>默认的<code>incr a</code>等同于.net里面的<code>a++</code>的意思，即本身自增1。</p>
<p><code>expr</code>的基本语法为：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr <span class="function"><span class="keyword">function</span></span> <span class="keyword">number</span></span><br></pre></td></tr></table></figure></p>
<p><code>expr</code>是为了提供更加复杂的操作而设计的一个语法，比如运算乘除法等等。在执行算术操作的时候必须将<code>expr</code>命令放在算术操作之前。例如：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> a <span class="number">20</span>; <span class="built_in">set</span> b <span class="number">4</span>;</span><br><span class="line"><span class="built_in">set</span> c [expr $a/$b]; <span class="preprocessor">#此时的c的值为<span class="number">5</span></span></span><br></pre></td></tr></table></figure></p>
<p>　　除此之外，<code>expr</code>还能够识别一些函数及其返回值如下：<br>　　<code>abs(x)</code>x的绝对值<br>　　<code>round(x)</code> x舍入后得到的整数值<br>　　<code>sin(x)</code> x的正弦<br>　　…………………………………..<br>　　举个例子：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="operator">a</span> [expr <span class="built_in">sin</span>(<span class="number">0.3</span>)]; <span class="comment">#计算0.3的正弦</span></span><br></pre></td></tr></table></figure></p>
<h3 id="7-转义">7.转义</h3><p>在tcl中可以使用{}将需要转义的字符串括起来。例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> a <span class="number">5</span>;</span><br><span class="line"><span class="built_in">set</span> b &#123;<span class="variable">$a</span>&#125;;  <span class="comment">#此时b的值为”$a“，而不是5。</span></span><br></pre></td></tr></table></figure></p>
<h3 id="8-流控制">8.流控制</h3><p><code>if</code> 控制流<br>　　基本语法：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &#123; 表达式 &#125; &#123;</span><br><span class="line">     #运算;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    #其他运算;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>需要注意的是<code>if….else,if……elseif…</code>中的<code>else</code>，<code>elseif</code>必须要和<code>if</code>的后面一个{在同一行。</p>
<p><code>switch</code>控制流：<br>基本语法：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> <span class="variable">$x</span> &#123;</span><br><span class="line">  </span><br><span class="line">　　数值<span class="number">1</span> &#123; 操作<span class="number">1</span> ;&#125;            </span><br><span class="line"> </span><br><span class="line">　　数值<span class="number">2</span> &#123; 操作<span class="number">2</span> ;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="9-循环">9.循环</h3><p>tcl提供三种循环命令，分别为：<code>for</code>，<code>foreach</code>，<code>while</code>。此外tcl还提供两个循环控制命令。注意：这个三个命令中的程序块的开始花括号必须要和三个命令同一行。</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>基本语法：</span><br><span class="line">　　<span class="keyword">while</span> &#123;条件&#125; &#123; 程序块 &#125;</span><br></pre></td></tr></table></figure>
<p><code>foreach</code>将在一组变元中进行循环，并且每次都将执行他的循环体。基本结构：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foreach <span class="built_in">variable</span> &#123;<span class="keyword">items</span>&#125; &#123;block&#125;</span><br></pre></td></tr></table></figure></p>
<p>　　这里的<code>variable</code>是变量的名字，便于<code>block</code>中使用。举例：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">foreach <span class="literal">element</span> &#123;<span class="number">0</span> m n b v&#125; &#123;</span><br><span class="line">       switch <span class="variable">$element</span> &#123;</span><br><span class="line">             # 判断element的值</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>for</code>是最常用的循环。其基本结构为：</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;initialization&#125; &#123;condition&#125; &#123;increment&#125; &#123;body&#125;</span><br></pre></td></tr></table></figure>
<p>例如：　</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i <span class="number">0</span>&#125; &#123;$i &lt; <span class="number">10</span>&#125; &#123;incr i&#125; &#123;<span class="built_in">puts</span> $i;&#125; <span class="preprocessor">#将打印出<span class="number">0</span>到<span class="number">9</span></span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>参考自:<a href="http://www.cnblogs.com/qianlifeng/archive/2011/03/05/1971663.html" target="_blank" rel="external">http://www.cnblogs.com/qia]]>
    </summary>
    
      <category term="Spintronics" scheme="http://syzhang.me/tags/Spintronics/"/>
    
      <category term="Tcl" scheme="http://syzhang.me/tags/Tcl/"/>
    
      <category term="Spintronics" scheme="http://syzhang.me/categories/Spintronics/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[OOMMF简介与安装指南]]></title>
    <link href="http://syzhang.me/2015/10/12/OOMMF%E7%AE%80%E4%BB%8B%E4%B8%8E%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
    <id>http://syzhang.me/2015/10/12/OOMMF简介与安装指南/</id>
    <published>2015-10-12T10:05:34.000Z</published>
    <updated>2015-10-12T11:33:32.794Z</updated>
    <content type="html"><![CDATA[<h2 id="OOMMF介绍">OOMMF介绍</h2><p>oommf是当前使用最广泛（没有之一）的微磁模拟软件，属于开源软件，自由下载，主要由美国NIST的M.Donahue等人开发，不定期释出新版本。目前的最新版本为oommf1.2a5，分为64位和32位两种，适用平台囊括Windows/Linux/Unix/Mac等几乎所有操作系统。官网有Windows预编译版和源文件包提供，前者可以在Windows上直接运行，后者需要自行编译。使用oommf前需要先安装tcl/tk软件，如果要从oommf源文件自行编译，还需要安装合适的编译器，例如MS-VC++(免费的express版就可以)等。oommf属于面向对象软件，功能很强大，而且very flexible，就速度而言，64位版要比32位版快几倍。要学会oommf必须好好看一下安装包自带的说明书(userguide)，并且安装包里还有很多示例性的mif文件。看完说明书后，最好把mif文件逐个看一遍，这样肯定能够学会编写oommf的输入文件(即mif文件)。oommf的输入文件语言是tcl语言。</p>
<h2 id="其他微磁学软件介绍">其他微磁学软件介绍</h2><p>　    LLG Micromagnetics Simulator是一款收费软件，由原美国亚利桑那州立大学教授M.Scheinfein开发，用户比oommf要少很多，一方面是由于其售价高达合人民币约六万，另一方面是由于其速度太慢，比oommf要慢数倍，另外，llg的功能也没有oommf强大，有些微磁学问题用llg是没办法做的。作为售价不菲的收费软件，llg有其自身的优点-提供了某些数据处理功能，这是自由软件所不具备的。对于某些微磁问题，这些数据后处理功能非常重要。llg只能在Windows平台上运行，2013年推出了64位版本。<br>　　mumax是最近两三年才推出的一款微磁软件，属于开源软件，自由下载，主要由比利时Ghent大学的A.Vansteenkiste博士开发，不定期释出新版本，目前更新很频繁。mumax是一款GPU软件，所以它的特点是速度快。经笔者验证，mumax的运算速度比oommf-64位版本还要快几倍(因此比llg要快几十甚至上百倍)。mumax专门针对nVIDIA GPU开发，可以在Linux/Windows/Mac平台上运行。官网有Windows可执行文件包和源文件包提供。mumax的输入文件为mx3格式，官网提供有示例性mx3文件和API，简单易学，大约几天就能上手。mumax的输入文件语言是比较新的go语言。<br>　　<br>　　另外，免费微磁软件还有magpar/nmag/micromagnum(GPU软件)等，收费软件还有micromagus/GPMagnet(GPU软件)。<br>　　<br>　　oommf/llg/mumax/micromagnum采用的是有限差分法(finite-difference method)，magpar和nmag采用的是有限元法(finite-element method)。</p>
<h2 id="安装方式">安装方式</h2><h3 id="1-_Download_the_graphics_UI_package_:">1. Download the graphics UI package :</h3><p>Tcl/Tk 8.4 (NOT 8.5), from:<a href="http://www.activestate.com/activetcl/downloads" target="_blank" rel="external">http://www.activestate.com/activetcl/downloads</a>.<br>And install by clicking the exe . You may have to add the Tcl directory to your global path variable. On windows XP, this is done by right clicking</p>
<blockquote>
<p>My Computer -&gt; Properties -&gt; Advanced -&gt; Environment Variables</p>
</blockquote>
<p>and find the ”Path” variable in the list. Add a line similar to</p>
<blockquote>
<p>D:\Tcl\bin</p>
</blockquote>
<h3 id="2-_Download_the_main_code_:">2. Download the main code :</h3><p>OOMMF v 1.2a3, compiled for Windows and Tcl/Tk 8.4, from<br><a href="http://math.nist.gov/oommf/dist/oommf12a3_20021030_84.zip" target="_blank" rel="external">http://math.nist.gov/oommf/dist/oommf12a3_20021030_84.zip</a><br>Unzip, and start the command line (<code>Start -Run -”cmd”</code>). Change directory to you oommf dir, and type:<br><code>tclsh84 oommf.tcl pimake upgrade</code></p>
<p>Now, to fix some known bugs ,go to</p>
<p><http: math.nist.gov="" oommf="" software-patchsets="" oommf12a3="" patchinfo.html=""></http:></p>
<p>and complete the steps described in problem 2, 8, 13, 16, 17 and 19 All these problems are solved by downloading and replacing ?les -no recompiling is required.</p>
<p>Note:</p>
<blockquote>
<p>change dir: cd /d D:\Tcl\oommf</p>
</blockquote>
<p>参考网站：<br><a href="http://emuch.net/html/201405/7429576.html" target="_blank" rel="external">微磁模拟软件oommf/llg/mumax之比较</a><br><a href="http://researching.blog.163.com/blog/static/2023050432012216113947869/" target="_blank" rel="external">OOMMF安装指南【整理】</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="OOMMF介绍">OOMMF介绍</h2><p>oommf是当前使用最广泛（没有之一）的微磁模拟软件，属于开源软件，自由下载，主要由美国NIST的M.Donahue等人开发，不定期释出新版本。目前的最新版本为oommf1.2a5，分为64位和32位两种，适用平台囊]]>
    </summary>
    
      <category term="Spintronics" scheme="http://syzhang.me/tags/Spintronics/"/>
    
      <category term="Tools" scheme="http://syzhang.me/tags/Tools/"/>
    
      <category term="Spintronics" scheme="http://syzhang.me/categories/Spintronics/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[珍惜在一起的每一天]]></title>
    <link href="http://syzhang.me/2015/10/12/%E7%8F%8D%E6%83%9C%E5%9C%A8%E4%B8%80%E8%B5%B7%E7%9A%84%E6%AF%8F%E4%B8%80%E5%A4%A9/"/>
    <id>http://syzhang.me/2015/10/12/珍惜在一起的每一天/</id>
    <published>2015-10-12T08:24:16.000Z</published>
    <updated>2015-10-12T08:31:37.711Z</updated>
    <content type="html"><![CDATA[<p>写下这篇随笔，记下砂锅和傻瓜的第一天。</p>
<p>未来太遥远，我们都不知道会在哪里，和谁，会怎样。<br>幸运的是，此时此刻，我有砂锅陪在身边。<br>今天和明天，以及以后每一个在一起的今天和明天，执手，共赴青春。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>写下这篇随笔，记下砂锅和傻瓜的第一天。</p>
<p>未来太遥远，我们都不知道会在哪里，和谁，会怎样。<br>幸运的是，此时此刻，我有砂锅陪在身边。<br>今天和明天，以及以后每一个在一起的今天和明天，执手，共赴青春。</p>
]]>
    </summary>
    
      <category term="文学" scheme="http://syzhang.me/tags/%E6%96%87%E5%AD%A6/"/>
    
      <category term="随笔" scheme="http://syzhang.me/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="随笔" scheme="http://syzhang.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Markdown使用方法]]></title>
    <link href="http://syzhang.me/2015/10/11/Markdown%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://syzhang.me/2015/10/11/Markdown使用方法/</id>
    <published>2015-10-11T06:53:51.000Z</published>
    <updated>2015-10-11T10:25:55.582Z</updated>
    <content type="html"><![CDATA[<h2 id="Markdown简介">Markdown简介</h2><blockquote>
<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="external">维基百科</a></p>
</blockquote>
<h3 id="1-_斜体和粗体">1. 斜体和粗体</h3><p>使用 <em> 和 *</em> 表示斜体和粗体。</p>
<p>示例：</p>
<p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p>
<h3 id="2-_分级标题">2. 分级标题</h3><p>使用 === 表示一级标题，使用 — 表示二级标题。</p>
<p>示例：</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">这是一个一级标题</span><br><span class="line">============================</span></span><br><span class="line"></span><br><span class="line"><span class="header">这是一个二级标题</span><br><span class="line">--------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">### 这是一个三级标题</span><br></pre></td></tr></table></figure>
<p>你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。</p>
<h3 id="3-_外链接">3. 外链接</h3><p>使用 [描述](链接地址) 为文字增加外链接。</p>
<p>示例：</p>
<p>这是去往 <a href="http://ghosertblog.github.com" target="_blank" rel="external">本人博客</a> 的链接。</p>
<h3 id="4-_无序列表">4. 无序列表</h3><p>使用 *，+，- 表示无序列表。</p>
<p>示例：</p>
<ul>
<li>无序列表项 一</li>
<li>无序列表项 二</li>
<li>无序列表项 三</li>
</ul>
<h3 id="5-_有序列表">5. 有序列表</h3><p>使用数字和点表示有序列表。</p>
<p>示例：</p>
<ol>
<li>有序列表项 一</li>
<li>有序列表项 二</li>
<li>有序列表项 三</li>
</ol>
<h3 id="6-_文字引用">6. 文字引用</h3><p>使用 &gt; 表示文字引用。</p>
<p>示例：</p>
<blockquote>
<p>野火烧不尽，春风吹又生。</p>
</blockquote>
<h3 id="7-_行内代码块">7. 行内代码块</h3><p>使用 `代码` 表示行内代码块。</p>
<p>示例：</p>
<p>让我们聊聊 <code>html</code>。</p>
<h3 id="8-_代码块">8.  代码块</h3><p>使用 四个缩进空格 表示代码块。</p>
<p>示例：</p>
<pre><code>这是一个代码块，此行左侧有四个不可见的空格。
</code></pre><h3 id="9-_插入图像">9.  插入图像</h3><p>使用 ![描述](图片链接地址) 插入图像。</p>
<p>示例：</p>
<p><img src="https://www.zybuluo.com/static/img/my_head.jpg" alt="我的头像"></p>
<h2 id="Markdown_高阶语法手册">Markdown 高阶语法手册</h2><h3 id="1-_删除线">1. 删除线</h3><p>使用 ~~ 表示删除线。</p>
<p><del>这是一段错误的文本。</del></p>
<h3 id="2-_注脚">2. 注脚</h3><p>使用 [^keyword] 表示注脚。</p>
<p>这是一个注脚[^footnote]的样例。</p>
<p>这是第二个注脚[^footnote2]的样例。</p>
<h3 id="3-_LaTeX_公式">3. LaTeX 公式</h3><p>$ 表示行内公式： </p>
<p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p>
<p>$$ 表示整行公式：</p>
<p>$$\sum_{i=1}^n a_i=0$$</p>
<p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p>
<p>$$\sum^{j-1}<em>{k=0}{\widehat{\gamma}</em>{kj} z_k}$$</p>
<p>访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="external">MathJax</a> 参考更多使用方法。</p>
<h3 id="4-_加强的代码块">4. 加强的代码块</h3><p>支持四十一种编程语言的语法高亮的显示，行号显示。</p>
<p>非代码示例：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install <span class="keyword">vim</span>-gnome</span><br></pre></td></tr></table></figure>
<p>Python 示例：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="decorator">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">'''A docstring'''</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span><br><span class="line"><span class="prompt">... </span>prompt'''</span></span><br></pre></td></tr></table></figure>
<p>JavaScript 示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* nth element in the fibonacci series.</span><br><span class="line">* @param n &gt;= 0</span><br><span class="line">* @return the nth element, &gt;= 0.</span><br><span class="line">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> tmp;</span><br><span class="line">  <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    tmp = a;</span><br><span class="line">    a += b;</span><br><span class="line">    b = tmp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(fib(<span class="number">10</span>));</span><br></pre></td></tr></table></figure>
<h3 id="5-_表格支持">5. 表格支持</h3><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">\$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">\$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">\$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<p>[^footnote]: 这是一个 <em>注脚</em> 的 <strong>文本</strong>。</p>
<p>[^footnote2]: 这是另一个 <em>注脚</em> 的 <strong>文本</strong>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Markdown简介">Markdown简介</h2><blockquote>
<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wik]]>
    </summary>
    
      <category term="Markdown" scheme="http://syzhang.me/tags/Markdown/"/>
    
      <category term="Tools" scheme="http://syzhang.me/tags/Tools/"/>
    
      <category term="工具" scheme="http://syzhang.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Hexo+Github Pages搭建静态网页博客]]></title>
    <link href="http://syzhang.me/2015/10/10/%E4%BD%BF%E7%94%A8Hexo+Github%20Pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E5%8D%9A%E5%AE%A2/"/>
    <id>http://syzhang.me/2015/10/10/使用Hexo+Github Pages搭建静态网页博客/</id>
    <published>2015-10-10T10:21:43.000Z</published>
    <updated>2015-10-12T11:38:21.194Z</updated>
    <content type="html"><![CDATA[<p>自己动手，丰衣足食，这是自己在配置个人网站时候，基于查询到的教程和自己的实践经验而写，仅供参考。<br><a id="more"></a></p>
<h2 id="前言">前言</h2><p><a href="http://www.lofter.com" target="_blank" rel="external">LOFTER</a>，<a href="http://www.jianshu.com/" target="_blank" rel="external">简书</a>，<a href="https://about.me/" target="_blank" rel="external">about.me</a>等等都提供了非常好的轻博客服务，无论是主题的视觉效果还编辑内容的便捷性都很棒。但很多人肯定相比一定和我一样，都希望能自己动手搭建一个自己的专属网页，用自己喜欢的域名，实现自己最喜欢的UI效果，这也算是一个“工程狮”自豪吧。</p>
<p>本文主要涉及自己在配置过程中遇到的问题与解决方案,较为完整的详细教程参见:<br><a href="http://cnfeat.com/blog/2014/05/10/how-to-build-a-blog/" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></p>
<p><a href="http://blog.lmintlcx.com/post/blog-with-hexo.html" target="_blank" rel="external">使用Hexo搭建博客</a></p>
<h2 id="待补充">待补充</h2>]]></content>
    <summary type="html">
    <![CDATA[<p>自己动手，丰衣足食，这是自己在配置个人网站时候，基于查询到的教程和自己的实践经验而写，仅供参考。<br>]]>
    
    </summary>
    
      <category term="Github" scheme="http://syzhang.me/tags/Github/"/>
    
      <category term="Hexo" scheme="http://syzhang.me/tags/Hexo/"/>
    
      <category term="Web" scheme="http://syzhang.me/tags/Web/"/>
    
      <category term="Web" scheme="http://syzhang.me/categories/Web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[First Page]]></title>
    <link href="http://syzhang.me/2015/10/09/First-Page/"/>
    <id>http://syzhang.me/2015/10/09/First-Page/</id>
    <published>2015-10-09T12:55:15.000Z</published>
    <updated>2015-10-09T13:04:13.074Z</updated>
    <content type="html"><![CDATA[<p>历经九九八十一难终于把这个Personal Blog给搭好了，个中滋味也只有经历过才有体会。</p>
<p>为了省钱，没有弄动态网页，用hexo的主题和github pages先部署了一个能看的网页。真正做起来的时候，才会发现，很多东西真的没有那么复杂。</p>
<p>十月的秋风肆虐，北京的霾和蓝天白云轮番登场，来北京的第三个秋天，一路前行，且行且珍惜。</p>
<hr>
<p>S.Y.Zhang</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>历经九九八十一难终于把这个Personal Blog给搭好了，个中滋味也只有经历过才有体会。</p>
<p>为了省钱，没有弄动态网页，用hexo的主题和github pages先部署了一个能看的网页。真正做起来的时候，才会发现，很多东西真的没有那么复杂。</p>
<p>十月]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[世上所有的坚持，都是因为热爱]]></title>
    <link href="http://syzhang.me/2015/10/09/%E4%B8%96%E4%B8%8A%E6%89%80%E6%9C%89%E7%9A%84%E5%9D%9A%E6%8C%81%EF%BC%8C%E9%83%BD%E6%98%AF%E5%9B%A0%E4%B8%BA%E7%83%AD%E7%88%B1/"/>
    <id>http://syzhang.me/2015/10/09/世上所有的坚持，都是因为热爱/</id>
    <published>2015-10-09T12:55:15.000Z</published>
    <updated>2015-10-11T06:19:38.512Z</updated>
    <content type="html"><![CDATA[<p>很久之前读过这篇文章，每次读起来都特别感动，这个网站一开始计划放一些技术心得，不过放一篇文学青年的文字也不碍事。<br><a id="more"></a><br>转载自 <a href="http://wufazhuce.com/one/vol.427?from=timeline&amp;isappinstalled=0#articulo" target="_blank" rel="external">一个</a></p>
<p><em>祝我们再遇见，都能比现在过得更好。</em></p>
<p><strong>作者/张皓宸</strong></p>
<p>上个月，朋友跟一个大佬级别的经纪人吃饭，把我顺道捎上了。刚一落座，那个大佬就讲起前段时间去美国旅行的经历，劝我们好好打拼，争取今后能到那个自由的国度去看看。聊了一会儿见他的朋友还没到，就斟满茶水，给我们讲了一个故事。<br>他说，我们每个人身体里其实都装着一个宇宙。</p>
<p>阿Ken是个香港人。<br>因为一直怀抱着大陆梦，于是从港大毕业后，他拒掉了香港公司的offer，直接投奔成都。张艺谋说成都是一座来了就不想走的城市，受他影响，阿Ken对这座城市情有独钟。<br>故事的开始就发生在这里。</p>
<p>来成都的前两年，阿Ken全然陶醉在自己的游客身份上，靠着家里的钱吃喝玩乐。他异常钟情于火锅，几乎隔两天就会吃一次，还必须是牛油锅底，辣到嘴巴红肿满身大汗才能爽快。最好笑的是，他还喜欢上了打麻将，成都的麻将叫血战到底，一桌四人胡到最后一人为止，他说这种畅快淋漓的“厮杀”打牌方式非常带劲。这份比成都人都还爱成都的情怀，让阿Ken短时间内就交到一帮挚友。<br>到了第三年，阿Ken败光了家里给他的钱，回头看身边的人都在各自的岗位忙碌，才从桃花源里醒了过来，开始考虑到生活的问题。对一个普通话还说不标准的香港人，找工作其实不易，多次碰了壁，最后因其是艺术设计毕业生，经朋友介绍进了一家婚纱店设计婚纱。</p>
<p>一晃又是两年。26岁的阿Ken从刚进店的学徒到自己动手设计婚纱，看似步履不停，却遇见了自己的瓶颈，店铺不大，生意也就还好，况且因为放不下面子的缘故，有些单子还得让给另一个女设计师。那个时候，他骗家人说他在一家外企上班，小日子风风火火的，但实则底薪加提成，一个月下来也就只能解决温饱，根本攒不下钱来，手里靠两张信用卡，拆东墙补西墙勉强地过活着。为了省钱还时常逃掉朋友组的酒局和出国旅行，渐渐的朋友也少了，最喜欢做的事情变成下班后宅在家里枯燥地上网，写写博客。<br>真称得上是穷困潦倒。</p>
<p>08年汶川地震的时候，阿Ken接到了笔大单，说是那个要嫁人的富二代是阿Ken博客的忠实粉丝，点名要他设计的婚纱。第一次见面沟通被对方邀去仁和春天顶楼的咖啡馆，他丝毫不敢怠慢，打扮得油光蹭亮地去了。<br>还没来得及消化女生的劲爆身材，就地震了。当时大地就像哀嚎似的，天瞬间暗了下来，所有人都疯了，四处乱窜，尖叫声和杯子的破碎声此起彼伏。阿Ken想都没想，拉起女生就往应急通道跑，女生吓得一边哭一边叫，高跟鞋都跑掉了，于是他不管人家同不同意，直接拦腰把她扛了起来。小小的楼梯间止不住地晃悠，天花板一直在落灰。那种恐惧，看客们无法感同身受。<br>两人安全到了街上，乌压压全挤满了人，女生下了地站不稳，整个人就摊在阿Ken身上，他当时非常尴尬，因为她的胸，真的太大了。</p>
<p>后来事情的发展非常顺天意，女生逃了婚，跟阿Ken好上了。但女方的家长一直对他耿耿于怀，见面聊了工作后更是戴上了有色眼镜，“不可能”三个字给了他们这段恋情最好的回应。<br>地震后余震不断，整个城市都人心惶惶的，阿Ken一慌神不小心向妈妈说漏了嘴，给家里人知道他在婚纱店工作，于是家里人坚决反对，劝其改行。面对家庭和爱情的压力，他感到前所未有的彷徨。<br>好在那个大胸女生是个典型的“我喜欢谁关你屁事”的白羊座女孩，瞒着爸妈偷跑去阿Ken的店里，一有机会就给他加油打气。久而久之，他被女生感染，于是重新振作，跑去女生家立誓说，给他一年时间，如果还是没有改变，他就放弃女生。</p>
<p>说实话，这份冲动不全是女生给的，而是他真心觉得自己在设计这块可以搞出名堂，他也从未想过离开这座城市。而爱情给他最好的助力，就是有了责任以后，自己的行为不会太荒唐。</p>
<p>阿Ken说他有次无意看了张艺谋的一个采访。他说当初拍《活着》的时候，他可以跟葛大爷谈剧本到凌晨三四点，葛大爷撑不住睡着了，他就看着身边的工作人员谁眼睛还睁着就跟谁说。跟张艺谋合作过的人都说他精力特别旺盛，一进摄影棚就亢奋。<br>亢奋绝对是做一件事最源头的动力。<br>就好比习惯早起的人，拉开窗帘后看见蓝天白云就莫名兴奋，厨师看见食客狼吞虎咽地吃自己做的菜心里就觉得异常满足，摄影师遇见一个好模特，一股脑拍完才能发现自己满身都是泥泞。<br>怀着这份心情，阿Ken花了半年时间，让自己彻底爱上画婚纱，然后没过几个月，他就被一个国内知名的独立设计师团队挖去当设计总监，北京成都两地飞，加上自己是香港人的优势，让内地的客户有种国际化的归属感，赚的盆满钵满。</p>
<p>再问女生他们的恋情如何归置时，对方却说她要移民了。<br>明白事已至此，阿Ken没有多挽留。在双流机场跟她告别时，女生抱住他的脖子，在肩膀狠狠咬了一口，说放弃她吧。阿Ken没有回答，只是拍拍女生的背，像是安慰。</p>
<p>成都刚进入夏天，一切都变得懒样且随意，让闲适的节奏更添几许，只是地震后的天府之国，鲜有蓝天，每天都是雾蒙蒙的。女生走后，阿Ken经常去他们相遇的咖啡馆小憩，想起当初他扛着女生逃跑的画面，觉得又可笑又励志。</p>
<p>这些年，他们靠手机联系，有时候实在忍不住了，阿Ken会飞去美国找她。于是不管女生之前是刻意不回短信还是一而再再而三叫嚣着分手，见到他后必会以缠绵代替。来来回回几次，女生的父母只好睁一只眼闭一只眼，默许了他们这段异国恋。<br>直到11年年底，女生突然跟阿Ken说她订婚了，这次是她喜欢上对方，逃不了抢不了。不信邪的阿Ken飞过去想弄清事情的原委，结果出了机场，就看见那个所谓的未婚夫在宾利车里等着他，然后非常友好地带他去参观自己的制药厂，吃了当地最昂贵的西餐，并承诺会爱她一辈子。如同坐了一次跳楼机，心情直上直下，阿Ken面如死灰地默默飞回国。</p>
<p>女生结婚之后，因为老公抽大麻闹得有些不愉快，找过阿Ken几次，但对方的手机成了空号，一切聊天软件的头像都是黑白，问身边的朋友，也说他就跟消失了一样杳无音讯。后来，她老公的制药厂被警方查出来做毒品加工，背后竟牵扯起由她老公牵头的国际贩毒链条，女生被证实清白后吓得跟他离了婚，跟家人搬到纽泽西的一个小镇上生活。</p>
<p>故事到这里暂且划上句号。<br>经纪人大佬抬手跟前来的朋友打招呼，等到那个穿着风衣的男人一落座，我跟朋友惊着了，那张脸作为金牌影视制片人经常出现在新闻上。经纪人简单介绍了他，除了投资影视，还有自己的服装品牌，就连去年双十一淘宝流量最高的那家护肤品店也是他的。<br>我跟朋友默默在旁边听着他们的谈话，风衣男一直在询问人才输送和绿卡的问题，看样子是准备移民。经纪人打趣说他坚持了这么久终于可以过去了，起初我俩不明白，后来走的时候，他轻轻在我们身边说，他就是阿Ken。</p>
<p>那晚我失眠了，想到阿Ken消失的那两年，一定做了最大的坚持，如同当初坚持设计婚纱一样，坚持让自己更有能力去追回那个女生。<br>我们现在所经历的迷茫和窘境，其实就归咎于过去不愿面对的改变或多年来不曾根治的恶习，如果因为做一件事而无法坚持，那么到了20多岁需要对外界承担一份责任时，就欠自己一个交代。<br>我相信，阿Ken去了美国后，一定会在纽泽西跟女生相遇，上天会给勇敢的人最好的福气，好弥补他们动荡的那几年离合，也证明他当初的坚持，没有让自己的后半生有丝毫悔意。</p>
<p>别给自己找太多放弃的理由，因为比你好的人还在坚持。而这个世上所有的坚持，都是因为热爱。</p>
<p>祝我们再遇见，都能比现在过得更好。</p>
<p><em>张皓宸，作家。微博ID：张皓宸</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>很久之前读过这篇文章，每次读起来都特别感动，这个网站一开始计划放一些技术心得，不过放一篇文学青年的文字也不碍事。<br>]]>
    
    </summary>
    
      <category term="文学" scheme="http://syzhang.me/tags/%E6%96%87%E5%AD%A6/"/>
    
  </entry>
  
</feed>
